#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Note{
  int tone;
  char *rhythm;
} Note;

typedef struct Note_Arr {
  int len;
  Note *arr;
} Note_Arr;

typedef struct Arr {
  int len;
  void *arr;
} Arr;

#define CMAJ 1
#define CSHARPMAJ 2
#define DMAJ 3
#define DSHARPMAJ 4
#define EMAJ 5
#define FMAJ 6
#define FSHARPMAJ 7
#define GMAJ 8
#define GSHARPMAJ 9
#define AMAJ 10
#define ASHARPMAJ 11
#define BMAJ 12
#define CMIN 13
#define CSHARPMIN 14
#define DMIN 15
#define DSHARPMIN 16
#define EMIN 17
#define FMIN 18
#define FSHARPMIN 19
#define GMIN 20
#define GSHARPMIN 21
#define AMIN 22
#define ASHARPMIN 23
#define BMIN 24

// Major Pentatonic
int cmaj[] = {MIDI_OCTAVE_5, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A};
int csharpmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP};
int dmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B};
int dsharpmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C};
int emaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP};
int fmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D};
int fsharpmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP};
int gmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E};
int gsharpmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F};
int amaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP};
int asharpmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G};
int bmaj[] = {MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP};

// Minor Pentatonic
int cmin[] = { MIDI_OCTAVE_5, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP};
int csharpmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_B};
int dmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_C};
int dsharpmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP};
int emin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_D};
int fminor[] = { MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP};
int fsharpmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_E};
int gmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_F};
int gsharpmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP};
int amin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_G};
int asharpmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP};
int bmin[] = { MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A};