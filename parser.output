   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls fdecl

   4  fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY
   5        | FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY
   6        | FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY

   7  dec : DECORATOR LPAREN LIT_KEY COMMA LIT_INT COMMA LIT_STYLE RPAREN

   8  params_opt :
   9             | params_list

  10  params_list : type ID
  11              | params_list COMMA type ID

  12  type : BOOL
  13       | INT
  14       | STRING
  15       | NOTE
  16       | TONE
  17       | RHYTHM
  18       | NONE
  19       | type LBRACK RBRACK
  20       | MAP LT type COMMA type GT

  21  vdecl_list :
  22             | vdecl_list vdecl

  23  vdecl : type ID SEP

  24  stmt_list :
  25            | stmt_list stmt

  26  stmt : expr SEP
  27       | RETURN expr_opt SEP
  28       | LCURLY stmt_list RCURLY
  29       | IF expr stmt
  30       | IF expr stmt ELSE stmt
  31       | FOR expr IN expr stmt
  32       | WHILE expr stmt

  33  expr_opt :
  34           | expr

  35  expr : literals
  36       | lit_map
  37       | ID
  38       | expr PLUS expr
  39       | expr MINUS expr
  40       | expr TIMES expr
  41       | expr DIVIDE expr
  42       | lit_array CONCAT lit_array
  43       | lit_array BIND lit_array
  44       | val DUP LIT_INT
  45       | expr EQ expr
  46       | expr NEQ expr
  47       | expr LT expr
  48       | expr LTE expr
  49       | expr GT expr
  50       | expr GTE expr
  51       | NOT expr
  52       | expr AND expr
  53       | expr OR expr
  54       | ID ASSIGN expr
  55       | ID LPAREN args_opt RPAREN

  56  args_opt :
  57           | args_list

  58  args_list : expr
  59            | args_list COMMA expr

  60  literals : LIT_BOOL
  61           | LIT_INT
  62           | LIT_STR
  63           | LIT_RHYTHM
  64           | lit_note
  65           | lit_array

  66  lit_note : LPAREN LIT_INT LIT_RHYTHM RPAREN

  67  lit_array : LBRACK items_list RBRACK

  68  val : literals
  69      | ID

  70  items_list :
  71             | val
  72             | items_list COMMA val

  73  lit_map : LT map_list GT

  74  map_list :
  75           | val COLON val
  76           | map_list COMMA val COLON val

  77  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (77)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (77)

	.  reduce 77


state 4
	program : decls . EOF  (1)
	decls : decls . fdecl  (3)

	EOF  shift 5
	DECORATOR  shift 6
	FUNC  shift 7
	.  error

	fdecl  goto 8
	dec  goto 9


state 5
	program : decls EOF .  (1)

	.  reduce 1


state 6
	dec : DECORATOR . LPAREN LIT_KEY COMMA LIT_INT COMMA LIT_STYLE RPAREN  (7)

	LPAREN  shift 10
	.  error


state 7
	fdecl : FUNC . type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)
	fdecl : FUNC . MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY  (6)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	MAIN  shift 19
	.  error

	type  goto 20


state 8
	decls : decls fdecl .  (3)

	.  reduce 3


state 9
	fdecl : dec . FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	FUNC  shift 21
	.  error


state 10
	dec : DECORATOR LPAREN . LIT_KEY COMMA LIT_INT COMMA LIT_STYLE RPAREN  (7)

	LIT_KEY  shift 22
	.  error


state 11
	type : NOTE .  (15)

	.  reduce 15


state 12
	type : TONE .  (16)

	.  reduce 16


state 13
	type : RHYTHM .  (17)

	.  reduce 17


state 14
	type : INT .  (13)

	.  reduce 13


state 15
	type : BOOL .  (12)

	.  reduce 12


state 16
	type : STRING .  (14)

	.  reduce 14


state 17
	type : MAP . LT type COMMA type GT  (20)

	LT  shift 23
	.  error


state 18
	type : NONE .  (18)

	.  reduce 18


state 19
	fdecl : FUNC MAIN . LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY  (6)

	LPAREN  shift 24
	.  error


state 20
	fdecl : FUNC type . ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 25
	ID  shift 26
	.  error


state 21
	fdecl : dec FUNC . type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	.  error

	type  goto 27


state 22
	dec : DECORATOR LPAREN LIT_KEY . COMMA LIT_INT COMMA LIT_STYLE RPAREN  (7)

	COMMA  shift 28
	.  error


state 23
	type : MAP LT . type COMMA type GT  (20)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	.  error

	type  goto 29


state 24
	fdecl : FUNC MAIN LPAREN . RPAREN LCURLY vdecl_list stmt_list RCURLY  (6)

	RPAREN  shift 30
	.  error


state 25
	type : type LBRACK . RBRACK  (19)

	RBRACK  shift 31
	.  error


state 26
	fdecl : FUNC type ID . LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)

	LPAREN  shift 32
	.  error


state 27
	fdecl : dec FUNC type . ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 25
	ID  shift 33
	.  error


state 28
	dec : DECORATOR LPAREN LIT_KEY COMMA . LIT_INT COMMA LIT_STYLE RPAREN  (7)

	LIT_INT  shift 34
	.  error


state 29
	type : type . LBRACK RBRACK  (19)
	type : MAP LT type . COMMA type GT  (20)

	LBRACK  shift 25
	COMMA  shift 35
	.  error


state 30
	fdecl : FUNC MAIN LPAREN RPAREN . LCURLY vdecl_list stmt_list RCURLY  (6)

	LCURLY  shift 36
	.  error


state 31
	type : type LBRACK RBRACK .  (19)

	.  reduce 19


state 32
	fdecl : FUNC type ID LPAREN . params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)
	params_opt : .  (8)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	RPAREN  reduce 8

	type  goto 37
	params_opt  goto 38
	params_list  goto 39


state 33
	fdecl : dec FUNC type ID . LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	LPAREN  shift 40
	.  error


state 34
	dec : DECORATOR LPAREN LIT_KEY COMMA LIT_INT . COMMA LIT_STYLE RPAREN  (7)

	COMMA  shift 41
	.  error


state 35
	type : MAP LT type COMMA . type GT  (20)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	.  error

	type  goto 42


state 36
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY . vdecl_list stmt_list RCURLY  (6)
	vdecl_list : .  (21)

	.  reduce 21

	vdecl_list  goto 43


state 37
	params_list : type . ID  (10)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 25
	ID  shift 44
	.  error


state 38
	fdecl : FUNC type ID LPAREN params_opt . RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)

	RPAREN  shift 45
	.  error


state 39
	params_opt : params_list .  (9)
	params_list : params_list . COMMA type ID  (11)

	COMMA  shift 46
	RPAREN  reduce 9


state 40
	fdecl : dec FUNC type ID LPAREN . params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)
	params_opt : .  (8)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	RPAREN  reduce 8

	type  goto 37
	params_opt  goto 47
	params_list  goto 39


state 41
	dec : DECORATOR LPAREN LIT_KEY COMMA LIT_INT COMMA . LIT_STYLE RPAREN  (7)

	LIT_STYLE  shift 48
	.  error


state 42
	type : type . LBRACK RBRACK  (19)
	type : MAP LT type COMMA type . GT  (20)

	LBRACK  shift 25
	GT  shift 49
	.  error


state 43
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list . stmt_list RCURLY  (6)
	vdecl_list : vdecl_list . vdecl  (22)
	stmt_list : .  (24)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	LPAREN  reduce 24
	LBRACK  reduce 24
	LCURLY  reduce 24
	RCURLY  reduce 24
	LT  reduce 24
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24
	LIT_BOOL  reduce 24
	LIT_INT  reduce 24
	LIT_STR  reduce 24
	LIT_RHYTHM  reduce 24
	ID  reduce 24

	type  goto 50
	stmt_list  goto 51
	vdecl  goto 52


state 44
	params_list : type ID .  (10)

	.  reduce 10


state 45
	fdecl : FUNC type ID LPAREN params_opt RPAREN . LCURLY vdecl_list stmt_list RCURLY  (5)

	LCURLY  shift 53
	.  error


state 46
	params_list : params_list COMMA . type ID  (11)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	.  error

	type  goto 54


state 47
	fdecl : dec FUNC type ID LPAREN params_opt . RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	RPAREN  shift 55
	.  error


state 48
	dec : DECORATOR LPAREN LIT_KEY COMMA LIT_INT COMMA LIT_STYLE . RPAREN  (7)

	RPAREN  shift 56
	.  error


state 49
	type : MAP LT type COMMA type GT .  (20)

	.  reduce 20


state 50
	type : type . LBRACK RBRACK  (19)
	vdecl : type . ID SEP  (23)

	LBRACK  shift 25
	ID  shift 57
	.  error


state 51
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list . RCURLY  (6)
	stmt_list : stmt_list . stmt  (25)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	RCURLY  shift 61
	LT  shift 62
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 73
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 52
	vdecl_list : vdecl_list vdecl .  (22)

	.  reduce 22


state 53
	fdecl : FUNC type ID LPAREN params_opt RPAREN LCURLY . vdecl_list stmt_list RCURLY  (5)
	vdecl_list : .  (21)

	.  reduce 21

	vdecl_list  goto 80


state 54
	params_list : params_list COMMA type . ID  (11)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 25
	ID  shift 81
	.  error


state 55
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN . LCURLY vdecl_list stmt_list RCURLY  (4)

	LCURLY  shift 82
	.  error


state 56
	dec : DECORATOR LPAREN LIT_KEY COMMA LIT_INT COMMA LIT_STYLE RPAREN .  (7)

	.  reduce 7


state 57
	vdecl : type ID . SEP  (23)

	SEP  shift 83
	.  error


state 58
	lit_note : LPAREN . LIT_INT LIT_RHYTHM RPAREN  (66)

	LIT_INT  shift 84
	.  error


state 59
	lit_array : LBRACK . items_list RBRACK  (67)
	items_list : .  (70)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	RBRACK  reduce 70
	COMMA  reduce 70

	literals  goto 86
	lit_array  goto 87
	val  goto 88
	lit_note  goto 79
	items_list  goto 89


state 60
	stmt : LCURLY . stmt_list RCURLY  (28)
	stmt_list : .  (24)

	.  reduce 24

	stmt_list  goto 90


state 61
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY .  (6)

	.  reduce 6


state 62
	lit_map : LT . map_list GT  (73)
	map_list : .  (74)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	COMMA  reduce 74
	GT  reduce 74

	literals  goto 86
	lit_array  goto 87
	val  goto 91
	lit_note  goto 79
	map_list  goto 92


state 63
	expr : NOT . expr  (51)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 93
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 64
	stmt : IF . expr stmt  (29)
	stmt : IF . expr stmt ELSE stmt  (30)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 94
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 65
	stmt : FOR . expr IN expr stmt  (31)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 95
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 66
	stmt : WHILE . expr stmt  (32)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 96
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 67
	stmt : RETURN . expr_opt SEP  (27)
	expr_opt : .  (33)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	SEP  reduce 33

	expr  goto 97
	expr_opt  goto 98
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 68
	literals : LIT_BOOL .  (60)

	.  reduce 60


state 69
	literals : LIT_INT .  (61)

	.  reduce 61


state 70
	literals : LIT_STR .  (62)

	.  reduce 62


state 71
	literals : LIT_RHYTHM .  (63)

	.  reduce 63


72: shift/reduce conflict (shift 100, reduce 37) on LPAREN
state 72
	expr : ID .  (37)
	expr : ID . ASSIGN expr  (54)
	expr : ID . LPAREN args_opt RPAREN  (55)
	val : ID .  (69)

	ASSIGN  shift 99
	LPAREN  shift 100
	SEP  reduce 37
	RPAREN  reduce 37
	LBRACK  reduce 37
	LCURLY  reduce 37
	COMMA  reduce 37
	COLON  reduce 69
	PLUS  reduce 37
	MINUS  reduce 37
	TIMES  reduce 37
	DIVIDE  reduce 37
	DUP  reduce 69
	EQ  reduce 37
	NEQ  reduce 37
	LT  reduce 37
	LTE  reduce 37
	GT  reduce 37
	GTE  reduce 37
	AND  reduce 37
	OR  reduce 37
	NOT  reduce 37
	IN  reduce 37
	IF  reduce 37
	FOR  reduce 37
	WHILE  reduce 37
	RETURN  reduce 37
	LIT_BOOL  reduce 37
	LIT_INT  reduce 37
	LIT_STR  reduce 37
	LIT_RHYTHM  reduce 37
	ID  reduce 37


state 73
	stmt_list : stmt_list stmt .  (25)

	.  reduce 25


state 74
	stmt : expr . SEP  (26)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	SEP  shift 101
	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	.  error


state 75
	expr : literals .  (35)
	val : literals .  (68)

	SEP  reduce 35
	LPAREN  reduce 35
	RPAREN  reduce 35
	LBRACK  reduce 35
	LCURLY  reduce 35
	COMMA  reduce 35
	COLON  reduce 68
	PLUS  reduce 35
	MINUS  reduce 35
	TIMES  reduce 35
	DIVIDE  reduce 35
	DUP  reduce 68
	EQ  reduce 35
	NEQ  reduce 35
	LT  reduce 35
	LTE  reduce 35
	GT  reduce 35
	GTE  reduce 35
	AND  reduce 35
	OR  reduce 35
	NOT  reduce 35
	IN  reduce 35
	IF  reduce 35
	FOR  reduce 35
	WHILE  reduce 35
	RETURN  reduce 35
	LIT_BOOL  reduce 35
	LIT_INT  reduce 35
	LIT_STR  reduce 35
	LIT_RHYTHM  reduce 35
	ID  reduce 35


state 76
	expr : lit_map .  (36)

	.  reduce 36


state 77
	expr : lit_array . CONCAT lit_array  (42)
	expr : lit_array . BIND lit_array  (43)
	literals : lit_array .  (65)

	CONCAT  shift 114
	BIND  shift 115
	SEP  reduce 65
	LPAREN  reduce 65
	RPAREN  reduce 65
	LBRACK  reduce 65
	LCURLY  reduce 65
	COMMA  reduce 65
	COLON  reduce 65
	PLUS  reduce 65
	MINUS  reduce 65
	TIMES  reduce 65
	DIVIDE  reduce 65
	DUP  reduce 65
	EQ  reduce 65
	NEQ  reduce 65
	LT  reduce 65
	LTE  reduce 65
	GT  reduce 65
	GTE  reduce 65
	AND  reduce 65
	OR  reduce 65
	NOT  reduce 65
	IN  reduce 65
	IF  reduce 65
	FOR  reduce 65
	WHILE  reduce 65
	RETURN  reduce 65
	LIT_BOOL  reduce 65
	LIT_INT  reduce 65
	LIT_STR  reduce 65
	LIT_RHYTHM  reduce 65
	ID  reduce 65


state 78
	expr : val . DUP LIT_INT  (44)

	DUP  shift 116
	.  error


state 79
	literals : lit_note .  (64)

	.  reduce 64


state 80
	fdecl : FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list . stmt_list RCURLY  (5)
	vdecl_list : vdecl_list . vdecl  (22)
	stmt_list : .  (24)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	LPAREN  reduce 24
	LBRACK  reduce 24
	LCURLY  reduce 24
	RCURLY  reduce 24
	LT  reduce 24
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24
	LIT_BOOL  reduce 24
	LIT_INT  reduce 24
	LIT_STR  reduce 24
	LIT_RHYTHM  reduce 24
	ID  reduce 24

	type  goto 50
	stmt_list  goto 117
	vdecl  goto 52


state 81
	params_list : params_list COMMA type ID .  (11)

	.  reduce 11


state 82
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY . vdecl_list stmt_list RCURLY  (4)
	vdecl_list : .  (21)

	.  reduce 21

	vdecl_list  goto 118


state 83
	vdecl : type ID SEP .  (23)

	.  reduce 23


state 84
	lit_note : LPAREN LIT_INT . LIT_RHYTHM RPAREN  (66)

	LIT_RHYTHM  shift 119
	.  error


state 85
	val : ID .  (69)

	.  reduce 69


state 86
	val : literals .  (68)

	.  reduce 68


state 87
	literals : lit_array .  (65)

	.  reduce 65


state 88
	items_list : val .  (71)

	.  reduce 71


state 89
	lit_array : LBRACK items_list . RBRACK  (67)
	items_list : items_list . COMMA val  (72)

	RBRACK  shift 120
	COMMA  shift 121
	.  error


state 90
	stmt_list : stmt_list . stmt  (25)
	stmt : LCURLY stmt_list . RCURLY  (28)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	RCURLY  shift 122
	LT  shift 62
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 73
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 91
	map_list : val . COLON val  (75)

	COLON  shift 123
	.  error


state 92
	lit_map : LT map_list . GT  (73)
	map_list : map_list . COMMA val COLON val  (76)

	COMMA  shift 124
	GT  shift 125
	.  error


state 93
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : NOT expr .  (51)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	.  reduce 51


state 94
	stmt : IF expr . stmt  (29)
	stmt : IF expr . stmt ELSE stmt  (30)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 126
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 127
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 95
	stmt : FOR expr . IN expr stmt  (31)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	IN  shift 128
	.  error


state 96
	stmt : WHILE expr . stmt  (32)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 126
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 129
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 97
	expr_opt : expr .  (34)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	SEP  reduce 34


state 98
	stmt : RETURN expr_opt . SEP  (27)

	SEP  shift 130
	.  error


state 99
	expr : ID ASSIGN . expr  (54)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 131
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 100
	expr : ID LPAREN . args_opt RPAREN  (55)
	args_opt : .  (56)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	RPAREN  reduce 56

	expr  goto 132
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	args_opt  goto 133
	args_list  goto 134
	lit_note  goto 79


state 101
	stmt : expr SEP .  (26)

	.  reduce 26


state 102
	expr : expr PLUS . expr  (38)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 135
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 103
	expr : expr MINUS . expr  (39)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 136
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 104
	expr : expr TIMES . expr  (40)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 137
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 105
	expr : expr DIVIDE . expr  (41)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 138
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 106
	expr : expr EQ . expr  (45)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 139
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 107
	expr : expr NEQ . expr  (46)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 140
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 108
	expr : expr LT . expr  (47)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 141
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 109
	expr : expr LTE . expr  (48)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 142
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 110
	expr : expr GT . expr  (49)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 143
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 111
	expr : expr GTE . expr  (50)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 144
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 112
	expr : expr AND . expr  (52)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 145
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 113
	expr : expr OR . expr  (53)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 146
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 114
	expr : lit_array CONCAT . lit_array  (42)

	LBRACK  shift 59
	.  error

	lit_array  goto 147


state 115
	expr : lit_array BIND . lit_array  (43)

	LBRACK  shift 59
	.  error

	lit_array  goto 148


state 116
	expr : val DUP . LIT_INT  (44)

	LIT_INT  shift 149
	.  error


state 117
	fdecl : FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list . RCURLY  (5)
	stmt_list : stmt_list . stmt  (25)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	RCURLY  shift 150
	LT  shift 62
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 73
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 118
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list . stmt_list RCURLY  (4)
	vdecl_list : vdecl_list . vdecl  (22)
	stmt_list : .  (24)

	NOTE  shift 11
	TONE  shift 12
	RHYTHM  shift 13
	INT  shift 14
	BOOL  shift 15
	STRING  shift 16
	MAP  shift 17
	NONE  shift 18
	LPAREN  reduce 24
	LBRACK  reduce 24
	LCURLY  reduce 24
	RCURLY  reduce 24
	LT  reduce 24
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24
	LIT_BOOL  reduce 24
	LIT_INT  reduce 24
	LIT_STR  reduce 24
	LIT_RHYTHM  reduce 24
	ID  reduce 24

	type  goto 50
	stmt_list  goto 151
	vdecl  goto 52


state 119
	lit_note : LPAREN LIT_INT LIT_RHYTHM . RPAREN  (66)

	RPAREN  shift 152
	.  error


state 120
	lit_array : LBRACK items_list RBRACK .  (67)

	.  reduce 67


state 121
	items_list : items_list COMMA . val  (72)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	.  error

	literals  goto 86
	lit_array  goto 87
	val  goto 153
	lit_note  goto 79


state 122
	stmt : LCURLY stmt_list RCURLY .  (28)

	.  reduce 28


state 123
	map_list : val COLON . val  (75)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	.  error

	literals  goto 86
	lit_array  goto 87
	val  goto 154
	lit_note  goto 79


state 124
	map_list : map_list COMMA . val COLON val  (76)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	.  error

	literals  goto 86
	lit_array  goto 87
	val  goto 155
	lit_note  goto 79


state 125
	lit_map : LT map_list GT .  (73)

	.  reduce 73


state 126
	expr : expr LT . expr  (47)
	lit_map : LT . map_list GT  (73)
	map_list : .  (74)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	COMMA  reduce 74
	GT  reduce 74

	expr  goto 141
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 156
	lit_note  goto 79
	map_list  goto 92


state 127
	stmt : IF expr stmt .  (29)
	stmt : IF expr stmt . ELSE stmt  (30)

	ELSE  shift 157
	LPAREN  reduce 29
	LBRACK  reduce 29
	LCURLY  reduce 29
	RCURLY  reduce 29
	LT  reduce 29
	NOT  reduce 29
	IF  reduce 29
	FOR  reduce 29
	WHILE  reduce 29
	RETURN  reduce 29
	LIT_BOOL  reduce 29
	LIT_INT  reduce 29
	LIT_STR  reduce 29
	LIT_RHYTHM  reduce 29
	ID  reduce 29


state 128
	stmt : FOR expr IN . expr stmt  (31)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 158
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 129
	stmt : WHILE expr stmt .  (32)

	.  reduce 32


state 130
	stmt : RETURN expr_opt SEP .  (27)

	.  reduce 27


state 131
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)
	expr : ID ASSIGN expr .  (54)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	SEP  reduce 54
	LPAREN  reduce 54
	RPAREN  reduce 54
	LBRACK  reduce 54
	LCURLY  reduce 54
	COMMA  reduce 54
	NOT  reduce 54
	IN  reduce 54
	IF  reduce 54
	FOR  reduce 54
	WHILE  reduce 54
	RETURN  reduce 54
	LIT_BOOL  reduce 54
	LIT_INT  reduce 54
	LIT_STR  reduce 54
	LIT_RHYTHM  reduce 54
	ID  reduce 54


state 132
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)
	args_list : expr .  (58)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	RPAREN  reduce 58
	COMMA  reduce 58


state 133
	expr : ID LPAREN args_opt . RPAREN  (55)

	RPAREN  shift 159
	.  error


state 134
	args_opt : args_list .  (57)
	args_list : args_list . COMMA expr  (59)

	COMMA  shift 160
	RPAREN  reduce 57


state 135
	expr : expr . PLUS expr  (38)
	expr : expr PLUS expr .  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 38
	LPAREN  reduce 38
	RPAREN  reduce 38
	LBRACK  reduce 38
	LCURLY  reduce 38
	COMMA  reduce 38
	PLUS  reduce 38
	MINUS  reduce 38
	EQ  reduce 38
	NEQ  reduce 38
	LT  reduce 38
	LTE  reduce 38
	GT  reduce 38
	GTE  reduce 38
	AND  reduce 38
	OR  reduce 38
	NOT  reduce 38
	IN  reduce 38
	IF  reduce 38
	FOR  reduce 38
	WHILE  reduce 38
	RETURN  reduce 38
	LIT_BOOL  reduce 38
	LIT_INT  reduce 38
	LIT_STR  reduce 38
	LIT_RHYTHM  reduce 38
	ID  reduce 38


state 136
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr MINUS expr .  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 39
	LPAREN  reduce 39
	RPAREN  reduce 39
	LBRACK  reduce 39
	LCURLY  reduce 39
	COMMA  reduce 39
	PLUS  reduce 39
	MINUS  reduce 39
	EQ  reduce 39
	NEQ  reduce 39
	LT  reduce 39
	LTE  reduce 39
	GT  reduce 39
	GTE  reduce 39
	AND  reduce 39
	OR  reduce 39
	NOT  reduce 39
	IN  reduce 39
	IF  reduce 39
	FOR  reduce 39
	WHILE  reduce 39
	RETURN  reduce 39
	LIT_BOOL  reduce 39
	LIT_INT  reduce 39
	LIT_STR  reduce 39
	LIT_RHYTHM  reduce 39
	ID  reduce 39


state 137
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr TIMES expr .  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	.  reduce 40


state 138
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr DIVIDE expr .  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	.  reduce 41


state 139
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr EQ expr .  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	SEP  reduce 45
	LPAREN  reduce 45
	RPAREN  reduce 45
	LBRACK  reduce 45
	LCURLY  reduce 45
	COMMA  reduce 45
	EQ  reduce 45
	NEQ  reduce 45
	AND  reduce 45
	OR  reduce 45
	NOT  reduce 45
	IN  reduce 45
	IF  reduce 45
	FOR  reduce 45
	WHILE  reduce 45
	RETURN  reduce 45
	LIT_BOOL  reduce 45
	LIT_INT  reduce 45
	LIT_STR  reduce 45
	LIT_RHYTHM  reduce 45
	ID  reduce 45


state 140
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr NEQ expr .  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	SEP  reduce 46
	LPAREN  reduce 46
	RPAREN  reduce 46
	LBRACK  reduce 46
	LCURLY  reduce 46
	COMMA  reduce 46
	EQ  reduce 46
	NEQ  reduce 46
	AND  reduce 46
	OR  reduce 46
	NOT  reduce 46
	IN  reduce 46
	IF  reduce 46
	FOR  reduce 46
	WHILE  reduce 46
	RETURN  reduce 46
	LIT_BOOL  reduce 46
	LIT_INT  reduce 46
	LIT_STR  reduce 46
	LIT_RHYTHM  reduce 46
	ID  reduce 46


state 141
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr LT expr .  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 47
	LPAREN  reduce 47
	RPAREN  reduce 47
	LBRACK  reduce 47
	LCURLY  reduce 47
	COMMA  reduce 47
	EQ  reduce 47
	NEQ  reduce 47
	AND  reduce 47
	OR  reduce 47
	NOT  reduce 47
	IN  reduce 47
	IF  reduce 47
	FOR  reduce 47
	WHILE  reduce 47
	RETURN  reduce 47
	LIT_BOOL  reduce 47
	LIT_INT  reduce 47
	LIT_STR  reduce 47
	LIT_RHYTHM  reduce 47
	ID  reduce 47


state 142
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr LTE expr .  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 48
	LPAREN  reduce 48
	RPAREN  reduce 48
	LBRACK  reduce 48
	LCURLY  reduce 48
	COMMA  reduce 48
	EQ  reduce 48
	NEQ  reduce 48
	AND  reduce 48
	OR  reduce 48
	NOT  reduce 48
	IN  reduce 48
	IF  reduce 48
	FOR  reduce 48
	WHILE  reduce 48
	RETURN  reduce 48
	LIT_BOOL  reduce 48
	LIT_INT  reduce 48
	LIT_STR  reduce 48
	LIT_RHYTHM  reduce 48
	ID  reduce 48


state 143
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr GT expr .  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 49
	LPAREN  reduce 49
	RPAREN  reduce 49
	LBRACK  reduce 49
	LCURLY  reduce 49
	COMMA  reduce 49
	EQ  reduce 49
	NEQ  reduce 49
	AND  reduce 49
	OR  reduce 49
	NOT  reduce 49
	IN  reduce 49
	IF  reduce 49
	FOR  reduce 49
	WHILE  reduce 49
	RETURN  reduce 49
	LIT_BOOL  reduce 49
	LIT_INT  reduce 49
	LIT_STR  reduce 49
	LIT_RHYTHM  reduce 49
	ID  reduce 49


state 144
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr GTE expr .  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	SEP  reduce 50
	LPAREN  reduce 50
	RPAREN  reduce 50
	LBRACK  reduce 50
	LCURLY  reduce 50
	COMMA  reduce 50
	EQ  reduce 50
	NEQ  reduce 50
	AND  reduce 50
	OR  reduce 50
	NOT  reduce 50
	IN  reduce 50
	IF  reduce 50
	FOR  reduce 50
	WHILE  reduce 50
	RETURN  reduce 50
	LIT_BOOL  reduce 50
	LIT_INT  reduce 50
	LIT_STR  reduce 50
	LIT_RHYTHM  reduce 50
	ID  reduce 50


state 145
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr AND expr .  (52)
	expr : expr . OR expr  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	SEP  reduce 52
	LPAREN  reduce 52
	RPAREN  reduce 52
	LBRACK  reduce 52
	LCURLY  reduce 52
	COMMA  reduce 52
	AND  reduce 52
	OR  reduce 52
	NOT  reduce 52
	IN  reduce 52
	IF  reduce 52
	FOR  reduce 52
	WHILE  reduce 52
	RETURN  reduce 52
	LIT_BOOL  reduce 52
	LIT_INT  reduce 52
	LIT_STR  reduce 52
	LIT_RHYTHM  reduce 52
	ID  reduce 52


state 146
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)
	expr : expr OR expr .  (53)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	SEP  reduce 53
	LPAREN  reduce 53
	RPAREN  reduce 53
	LBRACK  reduce 53
	LCURLY  reduce 53
	COMMA  reduce 53
	OR  reduce 53
	NOT  reduce 53
	IN  reduce 53
	IF  reduce 53
	FOR  reduce 53
	WHILE  reduce 53
	RETURN  reduce 53
	LIT_BOOL  reduce 53
	LIT_INT  reduce 53
	LIT_STR  reduce 53
	LIT_RHYTHM  reduce 53
	ID  reduce 53


state 147
	expr : lit_array CONCAT lit_array .  (42)

	.  reduce 42


state 148
	expr : lit_array BIND lit_array .  (43)

	.  reduce 43


state 149
	expr : val DUP LIT_INT .  (44)

	.  reduce 44


state 150
	fdecl : FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY .  (5)

	.  reduce 5


state 151
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list . RCURLY  (4)
	stmt_list : stmt_list . stmt  (25)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	RCURLY  shift 161
	LT  shift 62
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 73
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 152
	lit_note : LPAREN LIT_INT LIT_RHYTHM RPAREN .  (66)

	.  reduce 66


state 153
	items_list : items_list COMMA val .  (72)

	.  reduce 72


state 154
	map_list : val COLON val .  (75)

	.  reduce 75


state 155
	map_list : map_list COMMA val . COLON val  (76)

	COLON  shift 162
	.  error


state 156
	expr : val . DUP LIT_INT  (44)
	map_list : val . COLON val  (75)

	COLON  shift 123
	DUP  shift 116
	.  error


state 157
	stmt : IF expr stmt ELSE . stmt  (30)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	LT  shift 62
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 163
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 158
	stmt : FOR expr IN expr . stmt  (31)
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)

	LPAREN  shift 58
	LBRACK  shift 59
	LCURLY  shift 60
	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 126
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	NOT  shift 63
	IF  shift 64
	FOR  shift 65
	WHILE  shift 66
	RETURN  shift 67
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	stmt  goto 164
	expr  goto 74
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 159
	expr : ID LPAREN args_opt RPAREN .  (55)

	.  reduce 55


state 160
	args_list : args_list COMMA . expr  (59)

	LPAREN  shift 58
	LBRACK  shift 59
	LT  shift 62
	NOT  shift 63
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 72
	.  error

	expr  goto 165
	literals  goto 75
	lit_map  goto 76
	lit_array  goto 77
	val  goto 78
	lit_note  goto 79


state 161
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY .  (4)

	.  reduce 4


state 162
	map_list : map_list COMMA val COLON . val  (76)

	LPAREN  shift 58
	LBRACK  shift 59
	LIT_BOOL  shift 68
	LIT_INT  shift 69
	LIT_STR  shift 70
	LIT_RHYTHM  shift 71
	ID  shift 85
	.  error

	literals  goto 86
	lit_array  goto 87
	val  goto 166
	lit_note  goto 79


state 163
	stmt : IF expr stmt ELSE stmt .  (30)

	.  reduce 30


state 164
	stmt : FOR expr IN expr stmt .  (31)

	.  reduce 31


state 165
	expr : expr . PLUS expr  (38)
	expr : expr . MINUS expr  (39)
	expr : expr . TIMES expr  (40)
	expr : expr . DIVIDE expr  (41)
	expr : expr . EQ expr  (45)
	expr : expr . NEQ expr  (46)
	expr : expr . LT expr  (47)
	expr : expr . LTE expr  (48)
	expr : expr . GT expr  (49)
	expr : expr . GTE expr  (50)
	expr : expr . AND expr  (52)
	expr : expr . OR expr  (53)
	args_list : args_list COMMA expr .  (59)

	PLUS  shift 102
	MINUS  shift 103
	TIMES  shift 104
	DIVIDE  shift 105
	EQ  shift 106
	NEQ  shift 107
	LT  shift 108
	LTE  shift 109
	GT  shift 110
	GTE  shift 111
	AND  shift 112
	OR  shift 113
	RPAREN  reduce 59
	COMMA  reduce 59


state 166
	map_list : map_list COMMA val COLON val .  (76)

	.  reduce 76


State 72 contains 1 shift/reduce conflict.


56 terminals, 24 nonterminals
78 grammar rules, 167 states
