   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls fdecl

   4  fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY
   5        | FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY

   6  dec :
   7      | DECORATOR LIT_KEY LIT_INT LIT_STYLE

   8  params_opt :
   9             | params_list

  10  params_list : type ID
  11              | params_list COMMA type ID

  12  type : BOOL
  13       | INT
  14       | STRING
  15       | NOTE
  16       | TONE
  17       | RHYTHM
  18       | NONE
  19       | type LBRACK RBRACK
  20       | MAP LT type COMMA type GT

  21  vdecl_list :
  22             | vdecl_list vdecl

  23  vdecl : type ID SEP

  24  stmt_list :
  25            | stmt_list stmt

  26  stmt : expr SEP
  27       | RETURN expr_opt SEP
  28       | LCURLY stmt_list RCURLY
  29       | IF expr stmt
  30       | IF expr stmt ELSE stmt
  31       | FOR expr IN expr stmt
  32       | WHILE expr stmt

  33  expr_opt :
  34           | expr

  35  expr : literals
  36       | ID
  37       | expr PLUS expr
  38       | expr MINUS expr
  39       | expr TIMES expr
  40       | expr DIVIDE expr
  41       | lit_array CONCAT lit_array
  42       | lit_array BIND lit_array
  43       | val DUP LIT_INT
  44       | expr EQ expr
  45       | expr NEQ expr
  46       | expr LT expr
  47       | expr LTE expr
  48       | expr GT expr
  49       | expr GTE expr
  50       | NOT expr
  51       | expr AND expr
  52       | expr OR expr
  53       | ID LPAREN args_opt RPAREN
  54       | ID ASSIGN expr

  55  args_opt :
  56           | args_list

  57  args_list : expr
  58            | args_list COMMA expr

  59  literals : LIT_BOOL
  60           | LIT_INT
  61           | LIT_STR
  62           | LIT_RHYTHM
  63           | lit_note
  64           | lit_array
  65           | lit_map

  66  lit_note : LPAREN LIT_INT COMMA LIT_RHYTHM RPAREN

  67  lit_array : LBRACK items_list RBRACK

  68  val : literals
  69      | ID

  70  items_list :
  71             | val
  72             | items_list COMMA val

  73  lit_map : LCURLY map_list RCURLY

  74  map_list :
  75           | val COLON val
  76           | map_list COMMA val COLON val

  77  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (77)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (77)

	.  reduce 77


4: shift/reduce conflict (shift 7, reduce 6) on FUNC
state 4
	program : decls . EOF  (1)
	decls : decls . fdecl  (3)
	dec : .  (6)

	EOF  shift 5
	DECORATOR  shift 6
	FUNC  shift 7

	fdecl  goto 8
	dec  goto 9


state 5
	program : decls EOF .  (1)

	.  reduce 1


state 6
	dec : DECORATOR . LIT_KEY LIT_INT LIT_STYLE  (7)

	LIT_KEY  shift 10
	.  error


state 7
	fdecl : FUNC . MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)

	MAIN  shift 11
	.  error


state 8
	decls : decls fdecl .  (3)

	.  reduce 3


state 9
	fdecl : dec . FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	FUNC  shift 12
	.  error


state 10
	dec : DECORATOR LIT_KEY . LIT_INT LIT_STYLE  (7)

	LIT_INT  shift 13
	.  error


state 11
	fdecl : FUNC MAIN . LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)

	LPAREN  shift 14
	.  error


state 12
	fdecl : dec FUNC . type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	.  error

	type  goto 23


state 13
	dec : DECORATOR LIT_KEY LIT_INT . LIT_STYLE  (7)

	LIT_STYLE  shift 24
	.  error


state 14
	fdecl : FUNC MAIN LPAREN . RPAREN LCURLY vdecl_list stmt_list RCURLY  (5)

	RPAREN  shift 25
	.  error


state 15
	type : NOTE .  (15)

	.  reduce 15


state 16
	type : TONE .  (16)

	.  reduce 16


state 17
	type : RHYTHM .  (17)

	.  reduce 17


state 18
	type : INT .  (13)

	.  reduce 13


state 19
	type : BOOL .  (12)

	.  reduce 12


state 20
	type : STRING .  (14)

	.  reduce 14


state 21
	type : MAP . LT type COMMA type GT  (20)

	LT  shift 26
	.  error


state 22
	type : NONE .  (18)

	.  reduce 18


state 23
	fdecl : dec FUNC type . ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 27
	ID  shift 28
	.  error


state 24
	dec : DECORATOR LIT_KEY LIT_INT LIT_STYLE .  (7)

	.  reduce 7


state 25
	fdecl : FUNC MAIN LPAREN RPAREN . LCURLY vdecl_list stmt_list RCURLY  (5)

	LCURLY  shift 29
	.  error


state 26
	type : MAP LT . type COMMA type GT  (20)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	.  error

	type  goto 30


state 27
	type : type LBRACK . RBRACK  (19)

	RBRACK  shift 31
	.  error


state 28
	fdecl : dec FUNC type ID . LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	LPAREN  shift 32
	.  error


state 29
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY . vdecl_list stmt_list RCURLY  (5)
	vdecl_list : .  (21)

	.  reduce 21

	vdecl_list  goto 33


state 30
	type : type . LBRACK RBRACK  (19)
	type : MAP LT type . COMMA type GT  (20)

	LBRACK  shift 27
	COMMA  shift 34
	.  error


state 31
	type : type LBRACK RBRACK .  (19)

	.  reduce 19


state 32
	fdecl : dec FUNC type ID LPAREN . params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)
	params_opt : .  (8)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	RPAREN  reduce 8

	type  goto 35
	params_opt  goto 36
	params_list  goto 37


state 33
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list . stmt_list RCURLY  (5)
	vdecl_list : vdecl_list . vdecl  (22)
	stmt_list : .  (24)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	LPAREN  reduce 24
	LBRACK  reduce 24
	LCURLY  reduce 24
	RCURLY  reduce 24
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24
	LIT_BOOL  reduce 24
	LIT_INT  reduce 24
	LIT_STR  reduce 24
	LIT_RHYTHM  reduce 24
	ID  reduce 24

	type  goto 38
	stmt_list  goto 39
	vdecl  goto 40


state 34
	type : MAP LT type COMMA . type GT  (20)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	.  error

	type  goto 41


state 35
	params_list : type . ID  (10)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 27
	ID  shift 42
	.  error


state 36
	fdecl : dec FUNC type ID LPAREN params_opt . RPAREN LCURLY vdecl_list stmt_list RCURLY  (4)

	RPAREN  shift 43
	.  error


state 37
	params_opt : params_list .  (9)
	params_list : params_list . COMMA type ID  (11)

	COMMA  shift 44
	RPAREN  reduce 9


state 38
	type : type . LBRACK RBRACK  (19)
	vdecl : type . ID SEP  (23)

	LBRACK  shift 27
	ID  shift 45
	.  error


state 39
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list . RCURLY  (5)
	stmt_list : stmt_list . stmt  (25)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	RCURLY  shift 49
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 60
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 40
	vdecl_list : vdecl_list vdecl .  (22)

	.  reduce 22


state 41
	type : type . LBRACK RBRACK  (19)
	type : MAP LT type COMMA type . GT  (20)

	LBRACK  shift 27
	GT  shift 67
	.  error


state 42
	params_list : type ID .  (10)

	.  reduce 10


state 43
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN . LCURLY vdecl_list stmt_list RCURLY  (4)

	LCURLY  shift 68
	.  error


state 44
	params_list : params_list COMMA . type ID  (11)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	.  error

	type  goto 69


state 45
	vdecl : type ID . SEP  (23)

	SEP  shift 70
	.  error


state 46
	lit_note : LPAREN . LIT_INT COMMA LIT_RHYTHM RPAREN  (66)

	LIT_INT  shift 71
	.  error


state 47
	lit_array : LBRACK . items_list RBRACK  (67)
	items_list : .  (70)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	RBRACK  reduce 70
	COMMA  reduce 70

	literals  goto 74
	lit_array  goto 75
	val  goto 76
	lit_note  goto 65
	lit_map  goto 66
	items_list  goto 77


48: shift/reduce conflict (shift 46, reduce 24) on LPAREN
48: shift/reduce conflict (shift 47, reduce 24) on LBRACK
48: shift/reduce conflict (shift 72, reduce 24) on LCURLY
48: reduce/reduce conflict (reduce 24, reduce 74) on RCURLY
48: shift/reduce conflict (shift 55, reduce 24) on LIT_BOOL
48: shift/reduce conflict (shift 56, reduce 24) on LIT_INT
48: shift/reduce conflict (shift 57, reduce 24) on LIT_STR
48: shift/reduce conflict (shift 58, reduce 24) on LIT_RHYTHM
48: shift/reduce conflict (shift 73, reduce 24) on ID
state 48
	stmt : LCURLY . stmt_list RCURLY  (28)
	lit_map : LCURLY . map_list RCURLY  (73)
	stmt_list : .  (24)
	map_list : .  (74)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	RCURLY  reduce 24
	COMMA  reduce 74
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24

	stmt_list  goto 78
	literals  goto 74
	lit_array  goto 75
	val  goto 79
	lit_note  goto 65
	lit_map  goto 66
	map_list  goto 80


state 49
	fdecl : FUNC MAIN LPAREN RPAREN LCURLY vdecl_list stmt_list RCURLY .  (5)

	.  reduce 5


state 50
	expr : NOT . expr  (50)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 81
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 51
	stmt : IF . expr stmt  (29)
	stmt : IF . expr stmt ELSE stmt  (30)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 82
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 52
	stmt : FOR . expr IN expr stmt  (31)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 83
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 53
	stmt : WHILE . expr stmt  (32)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 84
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 54
	stmt : RETURN . expr_opt SEP  (27)
	expr_opt : .  (33)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	SEP  reduce 33

	expr  goto 85
	expr_opt  goto 86
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 55
	literals : LIT_BOOL .  (59)

	.  reduce 59


state 56
	literals : LIT_INT .  (60)

	.  reduce 60


state 57
	literals : LIT_STR .  (61)

	.  reduce 61


state 58
	literals : LIT_RHYTHM .  (62)

	.  reduce 62


59: shift/reduce conflict (shift 88, reduce 36) on LPAREN
state 59
	expr : ID .  (36)
	expr : ID . LPAREN args_opt RPAREN  (53)
	expr : ID . ASSIGN expr  (54)
	val : ID .  (69)

	ASSIGN  shift 87
	LPAREN  shift 88
	SEP  reduce 36
	RPAREN  reduce 36
	LBRACK  reduce 36
	LCURLY  reduce 36
	COMMA  reduce 36
	PLUS  reduce 36
	MINUS  reduce 36
	TIMES  reduce 36
	DIVIDE  reduce 36
	DUP  reduce 69
	EQ  reduce 36
	NEQ  reduce 36
	LT  reduce 36
	LTE  reduce 36
	GT  reduce 36
	GTE  reduce 36
	AND  reduce 36
	OR  reduce 36
	NOT  reduce 36
	IN  reduce 36
	IF  reduce 36
	FOR  reduce 36
	WHILE  reduce 36
	RETURN  reduce 36
	LIT_BOOL  reduce 36
	LIT_INT  reduce 36
	LIT_STR  reduce 36
	LIT_RHYTHM  reduce 36
	ID  reduce 36


state 60
	stmt_list : stmt_list stmt .  (25)

	.  reduce 25


state 61
	stmt : expr . SEP  (26)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	SEP  shift 89
	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	.  error


state 62
	expr : literals .  (35)
	val : literals .  (68)

	SEP  reduce 35
	LPAREN  reduce 35
	RPAREN  reduce 35
	LBRACK  reduce 35
	LCURLY  reduce 35
	COMMA  reduce 35
	PLUS  reduce 35
	MINUS  reduce 35
	TIMES  reduce 35
	DIVIDE  reduce 35
	DUP  reduce 68
	EQ  reduce 35
	NEQ  reduce 35
	LT  reduce 35
	LTE  reduce 35
	GT  reduce 35
	GTE  reduce 35
	AND  reduce 35
	OR  reduce 35
	NOT  reduce 35
	IN  reduce 35
	IF  reduce 35
	FOR  reduce 35
	WHILE  reduce 35
	RETURN  reduce 35
	LIT_BOOL  reduce 35
	LIT_INT  reduce 35
	LIT_STR  reduce 35
	LIT_RHYTHM  reduce 35
	ID  reduce 35


state 63
	expr : lit_array . CONCAT lit_array  (41)
	expr : lit_array . BIND lit_array  (42)
	literals : lit_array .  (64)

	CONCAT  shift 102
	BIND  shift 103
	SEP  reduce 64
	LPAREN  reduce 64
	RPAREN  reduce 64
	LBRACK  reduce 64
	LCURLY  reduce 64
	COMMA  reduce 64
	PLUS  reduce 64
	MINUS  reduce 64
	TIMES  reduce 64
	DIVIDE  reduce 64
	DUP  reduce 64
	EQ  reduce 64
	NEQ  reduce 64
	LT  reduce 64
	LTE  reduce 64
	GT  reduce 64
	GTE  reduce 64
	AND  reduce 64
	OR  reduce 64
	NOT  reduce 64
	IN  reduce 64
	IF  reduce 64
	FOR  reduce 64
	WHILE  reduce 64
	RETURN  reduce 64
	LIT_BOOL  reduce 64
	LIT_INT  reduce 64
	LIT_STR  reduce 64
	LIT_RHYTHM  reduce 64
	ID  reduce 64


state 64
	expr : val . DUP LIT_INT  (43)

	DUP  shift 104
	.  error


state 65
	literals : lit_note .  (63)

	.  reduce 63


state 66
	literals : lit_map .  (65)

	.  reduce 65


state 67
	type : MAP LT type COMMA type GT .  (20)

	.  reduce 20


state 68
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY . vdecl_list stmt_list RCURLY  (4)
	vdecl_list : .  (21)

	.  reduce 21

	vdecl_list  goto 105


state 69
	params_list : params_list COMMA type . ID  (11)
	type : type . LBRACK RBRACK  (19)

	LBRACK  shift 27
	ID  shift 106
	.  error


state 70
	vdecl : type ID SEP .  (23)

	.  reduce 23


state 71
	lit_note : LPAREN LIT_INT . COMMA LIT_RHYTHM RPAREN  (66)

	COMMA  shift 107
	.  error


state 72
	lit_map : LCURLY . map_list RCURLY  (73)
	map_list : .  (74)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	RCURLY  reduce 74
	COMMA  reduce 74

	literals  goto 74
	lit_array  goto 75
	val  goto 79
	lit_note  goto 65
	lit_map  goto 66
	map_list  goto 80


state 73
	val : ID .  (69)

	.  reduce 69


state 74
	val : literals .  (68)

	.  reduce 68


state 75
	literals : lit_array .  (64)

	.  reduce 64


state 76
	items_list : val .  (71)

	.  reduce 71


state 77
	lit_array : LBRACK items_list . RBRACK  (67)
	items_list : items_list . COMMA val  (72)

	RBRACK  shift 108
	COMMA  shift 109
	.  error


state 78
	stmt_list : stmt_list . stmt  (25)
	stmt : LCURLY stmt_list . RCURLY  (28)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	RCURLY  shift 110
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 60
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 79
	map_list : val . COLON val  (75)

	COLON  shift 111
	.  error


state 80
	lit_map : LCURLY map_list . RCURLY  (73)
	map_list : map_list . COMMA val COLON val  (76)

	RCURLY  shift 112
	COMMA  shift 113
	.  error


state 81
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : NOT expr .  (50)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	.  reduce 50


state 82
	stmt : IF expr . stmt  (29)
	stmt : IF expr . stmt ELSE stmt  (30)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 114
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 83
	stmt : FOR expr . IN expr stmt  (31)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	IN  shift 115
	.  error


state 84
	stmt : WHILE expr . stmt  (32)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 116
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 85
	expr_opt : expr .  (34)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	SEP  reduce 34


state 86
	stmt : RETURN expr_opt . SEP  (27)

	SEP  shift 117
	.  error


state 87
	expr : ID ASSIGN . expr  (54)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 118
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 88
	expr : ID LPAREN . args_opt RPAREN  (53)
	args_opt : .  (55)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	RPAREN  reduce 55

	expr  goto 119
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	args_opt  goto 120
	args_list  goto 121
	lit_note  goto 65
	lit_map  goto 66


state 89
	stmt : expr SEP .  (26)

	.  reduce 26


state 90
	expr : expr PLUS . expr  (37)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 122
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 91
	expr : expr MINUS . expr  (38)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 123
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 92
	expr : expr TIMES . expr  (39)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 124
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 93
	expr : expr DIVIDE . expr  (40)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 125
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 94
	expr : expr EQ . expr  (44)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 126
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 95
	expr : expr NEQ . expr  (45)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 127
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 96
	expr : expr LT . expr  (46)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 128
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 97
	expr : expr LTE . expr  (47)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 129
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 98
	expr : expr GT . expr  (48)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 130
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 99
	expr : expr GTE . expr  (49)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 131
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 100
	expr : expr AND . expr  (51)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 132
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 101
	expr : expr OR . expr  (52)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 133
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 102
	expr : lit_array CONCAT . lit_array  (41)

	LBRACK  shift 47
	.  error

	lit_array  goto 134


state 103
	expr : lit_array BIND . lit_array  (42)

	LBRACK  shift 47
	.  error

	lit_array  goto 135


state 104
	expr : val DUP . LIT_INT  (43)

	LIT_INT  shift 136
	.  error


state 105
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list . stmt_list RCURLY  (4)
	vdecl_list : vdecl_list . vdecl  (22)
	stmt_list : .  (24)

	NOTE  shift 15
	TONE  shift 16
	RHYTHM  shift 17
	INT  shift 18
	BOOL  shift 19
	STRING  shift 20
	MAP  shift 21
	NONE  shift 22
	LPAREN  reduce 24
	LBRACK  reduce 24
	LCURLY  reduce 24
	RCURLY  reduce 24
	NOT  reduce 24
	IF  reduce 24
	FOR  reduce 24
	WHILE  reduce 24
	RETURN  reduce 24
	LIT_BOOL  reduce 24
	LIT_INT  reduce 24
	LIT_STR  reduce 24
	LIT_RHYTHM  reduce 24
	ID  reduce 24

	type  goto 38
	stmt_list  goto 137
	vdecl  goto 40


state 106
	params_list : params_list COMMA type ID .  (11)

	.  reduce 11


state 107
	lit_note : LPAREN LIT_INT COMMA . LIT_RHYTHM RPAREN  (66)

	LIT_RHYTHM  shift 138
	.  error


state 108
	lit_array : LBRACK items_list RBRACK .  (67)

	.  reduce 67


state 109
	items_list : items_list COMMA . val  (72)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	.  error

	literals  goto 74
	lit_array  goto 75
	val  goto 139
	lit_note  goto 65
	lit_map  goto 66


state 110
	stmt : LCURLY stmt_list RCURLY .  (28)

	.  reduce 28


state 111
	map_list : val COLON . val  (75)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	.  error

	literals  goto 74
	lit_array  goto 75
	val  goto 140
	lit_note  goto 65
	lit_map  goto 66


state 112
	lit_map : LCURLY map_list RCURLY .  (73)

	.  reduce 73


state 113
	map_list : map_list COMMA . val COLON val  (76)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	.  error

	literals  goto 74
	lit_array  goto 75
	val  goto 141
	lit_note  goto 65
	lit_map  goto 66


state 114
	stmt : IF expr stmt .  (29)
	stmt : IF expr stmt . ELSE stmt  (30)

	ELSE  shift 142
	LPAREN  reduce 29
	LBRACK  reduce 29
	LCURLY  reduce 29
	RCURLY  reduce 29
	NOT  reduce 29
	IF  reduce 29
	FOR  reduce 29
	WHILE  reduce 29
	RETURN  reduce 29
	LIT_BOOL  reduce 29
	LIT_INT  reduce 29
	LIT_STR  reduce 29
	LIT_RHYTHM  reduce 29
	ID  reduce 29


state 115
	stmt : FOR expr IN . expr stmt  (31)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 143
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 116
	stmt : WHILE expr stmt .  (32)

	.  reduce 32


state 117
	stmt : RETURN expr_opt SEP .  (27)

	.  reduce 27


state 118
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)
	expr : ID ASSIGN expr .  (54)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	SEP  reduce 54
	LPAREN  reduce 54
	RPAREN  reduce 54
	LBRACK  reduce 54
	LCURLY  reduce 54
	COMMA  reduce 54
	NOT  reduce 54
	IN  reduce 54
	IF  reduce 54
	FOR  reduce 54
	WHILE  reduce 54
	RETURN  reduce 54
	LIT_BOOL  reduce 54
	LIT_INT  reduce 54
	LIT_STR  reduce 54
	LIT_RHYTHM  reduce 54
	ID  reduce 54


state 119
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)
	args_list : expr .  (57)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	RPAREN  reduce 57
	COMMA  reduce 57


state 120
	expr : ID LPAREN args_opt . RPAREN  (53)

	RPAREN  shift 144
	.  error


state 121
	args_opt : args_list .  (56)
	args_list : args_list . COMMA expr  (58)

	COMMA  shift 145
	RPAREN  reduce 56


state 122
	expr : expr . PLUS expr  (37)
	expr : expr PLUS expr .  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 37
	LPAREN  reduce 37
	RPAREN  reduce 37
	LBRACK  reduce 37
	LCURLY  reduce 37
	COMMA  reduce 37
	PLUS  reduce 37
	MINUS  reduce 37
	EQ  reduce 37
	NEQ  reduce 37
	LT  reduce 37
	LTE  reduce 37
	GT  reduce 37
	GTE  reduce 37
	AND  reduce 37
	OR  reduce 37
	NOT  reduce 37
	IN  reduce 37
	IF  reduce 37
	FOR  reduce 37
	WHILE  reduce 37
	RETURN  reduce 37
	LIT_BOOL  reduce 37
	LIT_INT  reduce 37
	LIT_STR  reduce 37
	LIT_RHYTHM  reduce 37
	ID  reduce 37


state 123
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr MINUS expr .  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 38
	LPAREN  reduce 38
	RPAREN  reduce 38
	LBRACK  reduce 38
	LCURLY  reduce 38
	COMMA  reduce 38
	PLUS  reduce 38
	MINUS  reduce 38
	EQ  reduce 38
	NEQ  reduce 38
	LT  reduce 38
	LTE  reduce 38
	GT  reduce 38
	GTE  reduce 38
	AND  reduce 38
	OR  reduce 38
	NOT  reduce 38
	IN  reduce 38
	IF  reduce 38
	FOR  reduce 38
	WHILE  reduce 38
	RETURN  reduce 38
	LIT_BOOL  reduce 38
	LIT_INT  reduce 38
	LIT_STR  reduce 38
	LIT_RHYTHM  reduce 38
	ID  reduce 38


state 124
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr TIMES expr .  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	.  reduce 39


state 125
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr DIVIDE expr .  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	.  reduce 40


state 126
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr EQ expr .  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	SEP  reduce 44
	LPAREN  reduce 44
	RPAREN  reduce 44
	LBRACK  reduce 44
	LCURLY  reduce 44
	COMMA  reduce 44
	EQ  reduce 44
	NEQ  reduce 44
	AND  reduce 44
	OR  reduce 44
	NOT  reduce 44
	IN  reduce 44
	IF  reduce 44
	FOR  reduce 44
	WHILE  reduce 44
	RETURN  reduce 44
	LIT_BOOL  reduce 44
	LIT_INT  reduce 44
	LIT_STR  reduce 44
	LIT_RHYTHM  reduce 44
	ID  reduce 44


state 127
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr NEQ expr .  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	SEP  reduce 45
	LPAREN  reduce 45
	RPAREN  reduce 45
	LBRACK  reduce 45
	LCURLY  reduce 45
	COMMA  reduce 45
	EQ  reduce 45
	NEQ  reduce 45
	AND  reduce 45
	OR  reduce 45
	NOT  reduce 45
	IN  reduce 45
	IF  reduce 45
	FOR  reduce 45
	WHILE  reduce 45
	RETURN  reduce 45
	LIT_BOOL  reduce 45
	LIT_INT  reduce 45
	LIT_STR  reduce 45
	LIT_RHYTHM  reduce 45
	ID  reduce 45


state 128
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr LT expr .  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 46
	LPAREN  reduce 46
	RPAREN  reduce 46
	LBRACK  reduce 46
	LCURLY  reduce 46
	COMMA  reduce 46
	EQ  reduce 46
	NEQ  reduce 46
	AND  reduce 46
	OR  reduce 46
	NOT  reduce 46
	IN  reduce 46
	IF  reduce 46
	FOR  reduce 46
	WHILE  reduce 46
	RETURN  reduce 46
	LIT_BOOL  reduce 46
	LIT_INT  reduce 46
	LIT_STR  reduce 46
	LIT_RHYTHM  reduce 46
	ID  reduce 46


state 129
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr LTE expr .  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 47
	LPAREN  reduce 47
	RPAREN  reduce 47
	LBRACK  reduce 47
	LCURLY  reduce 47
	COMMA  reduce 47
	EQ  reduce 47
	NEQ  reduce 47
	AND  reduce 47
	OR  reduce 47
	NOT  reduce 47
	IN  reduce 47
	IF  reduce 47
	FOR  reduce 47
	WHILE  reduce 47
	RETURN  reduce 47
	LIT_BOOL  reduce 47
	LIT_INT  reduce 47
	LIT_STR  reduce 47
	LIT_RHYTHM  reduce 47
	ID  reduce 47


state 130
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr GT expr .  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 48
	LPAREN  reduce 48
	RPAREN  reduce 48
	LBRACK  reduce 48
	LCURLY  reduce 48
	COMMA  reduce 48
	EQ  reduce 48
	NEQ  reduce 48
	AND  reduce 48
	OR  reduce 48
	NOT  reduce 48
	IN  reduce 48
	IF  reduce 48
	FOR  reduce 48
	WHILE  reduce 48
	RETURN  reduce 48
	LIT_BOOL  reduce 48
	LIT_INT  reduce 48
	LIT_STR  reduce 48
	LIT_RHYTHM  reduce 48
	ID  reduce 48


state 131
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr GTE expr .  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	SEP  reduce 49
	LPAREN  reduce 49
	RPAREN  reduce 49
	LBRACK  reduce 49
	LCURLY  reduce 49
	COMMA  reduce 49
	EQ  reduce 49
	NEQ  reduce 49
	AND  reduce 49
	OR  reduce 49
	NOT  reduce 49
	IN  reduce 49
	IF  reduce 49
	FOR  reduce 49
	WHILE  reduce 49
	RETURN  reduce 49
	LIT_BOOL  reduce 49
	LIT_INT  reduce 49
	LIT_STR  reduce 49
	LIT_RHYTHM  reduce 49
	ID  reduce 49


state 132
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr AND expr .  (51)
	expr : expr . OR expr  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	SEP  reduce 51
	LPAREN  reduce 51
	RPAREN  reduce 51
	LBRACK  reduce 51
	LCURLY  reduce 51
	COMMA  reduce 51
	AND  reduce 51
	OR  reduce 51
	NOT  reduce 51
	IN  reduce 51
	IF  reduce 51
	FOR  reduce 51
	WHILE  reduce 51
	RETURN  reduce 51
	LIT_BOOL  reduce 51
	LIT_INT  reduce 51
	LIT_STR  reduce 51
	LIT_RHYTHM  reduce 51
	ID  reduce 51


state 133
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)
	expr : expr OR expr .  (52)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	SEP  reduce 52
	LPAREN  reduce 52
	RPAREN  reduce 52
	LBRACK  reduce 52
	LCURLY  reduce 52
	COMMA  reduce 52
	OR  reduce 52
	NOT  reduce 52
	IN  reduce 52
	IF  reduce 52
	FOR  reduce 52
	WHILE  reduce 52
	RETURN  reduce 52
	LIT_BOOL  reduce 52
	LIT_INT  reduce 52
	LIT_STR  reduce 52
	LIT_RHYTHM  reduce 52
	ID  reduce 52


state 134
	expr : lit_array CONCAT lit_array .  (41)

	.  reduce 41


state 135
	expr : lit_array BIND lit_array .  (42)

	.  reduce 42


state 136
	expr : val DUP LIT_INT .  (43)

	.  reduce 43


state 137
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list . RCURLY  (4)
	stmt_list : stmt_list . stmt  (25)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	RCURLY  shift 146
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 60
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 138
	lit_note : LPAREN LIT_INT COMMA LIT_RHYTHM . RPAREN  (66)

	RPAREN  shift 147
	.  error


state 139
	items_list : items_list COMMA val .  (72)

	.  reduce 72


state 140
	map_list : val COLON val .  (75)

	.  reduce 75


state 141
	map_list : map_list COMMA val . COLON val  (76)

	COLON  shift 148
	.  error


state 142
	stmt : IF expr stmt ELSE . stmt  (30)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 149
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 143
	stmt : FOR expr IN expr . stmt  (31)
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 48
	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	NOT  shift 50
	IF  shift 51
	FOR  shift 52
	WHILE  shift 53
	RETURN  shift 54
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	stmt  goto 150
	expr  goto 61
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 144
	expr : ID LPAREN args_opt RPAREN .  (53)

	.  reduce 53


state 145
	args_list : args_list COMMA . expr  (58)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	NOT  shift 50
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 59
	.  error

	expr  goto 151
	literals  goto 62
	lit_array  goto 63
	val  goto 64
	lit_note  goto 65
	lit_map  goto 66


state 146
	fdecl : dec FUNC type ID LPAREN params_opt RPAREN LCURLY vdecl_list stmt_list RCURLY .  (4)

	.  reduce 4


state 147
	lit_note : LPAREN LIT_INT COMMA LIT_RHYTHM RPAREN .  (66)

	.  reduce 66


state 148
	map_list : map_list COMMA val COLON . val  (76)

	LPAREN  shift 46
	LBRACK  shift 47
	LCURLY  shift 72
	LIT_BOOL  shift 55
	LIT_INT  shift 56
	LIT_STR  shift 57
	LIT_RHYTHM  shift 58
	ID  shift 73
	.  error

	literals  goto 74
	lit_array  goto 75
	val  goto 152
	lit_note  goto 65
	lit_map  goto 66


state 149
	stmt : IF expr stmt ELSE stmt .  (30)

	.  reduce 30


state 150
	stmt : FOR expr IN expr stmt .  (31)

	.  reduce 31


state 151
	expr : expr . PLUS expr  (37)
	expr : expr . MINUS expr  (38)
	expr : expr . TIMES expr  (39)
	expr : expr . DIVIDE expr  (40)
	expr : expr . EQ expr  (44)
	expr : expr . NEQ expr  (45)
	expr : expr . LT expr  (46)
	expr : expr . LTE expr  (47)
	expr : expr . GT expr  (48)
	expr : expr . GTE expr  (49)
	expr : expr . AND expr  (51)
	expr : expr . OR expr  (52)
	args_list : args_list COMMA expr .  (58)

	PLUS  shift 90
	MINUS  shift 91
	TIMES  shift 92
	DIVIDE  shift 93
	EQ  shift 94
	NEQ  shift 95
	LT  shift 96
	LTE  shift 97
	GT  shift 98
	GTE  shift 99
	AND  shift 100
	OR  shift 101
	RPAREN  reduce 58
	COMMA  reduce 58


state 152
	map_list : map_list COMMA val COLON val .  (76)

	.  reduce 76


Rules never reduced:
	dec :  (6)


State 4 contains 1 shift/reduce conflict.
State 48 contains 8 shift/reduce conflicts, 1 reduce/reduce conflict.
State 59 contains 1 shift/reduce conflict.


56 terminals, 24 nonterminals
78 grammar rules, 153 states
