#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Note{
  int tone;
  int rhythm;
} Note;

typedef struct Note_Arr {
    int len;
    Note *arr;
} Note_Arr;

// Major Pentatonic
int cmaj[] = { 0, MIDI_OCTAVE_5, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A};
int c#maj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP};
int dmaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B};
int d#maj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C};
int emaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP};
int fmaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D};
int f#maj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP};
int gmaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E};
int g#maj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F};
int amaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP};
int a#maj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G};
int bmaj[] = {0, MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP};

// Minor Pentatonic
int cmin[] = { 0, MIDI_OCTAVE_5, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP};
int c#min[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_B};
int dmin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_C};
int d#min[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP};
int emin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_G,
            MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_D};
int fmin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_F, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP};
int f#min[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_A,
            MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_E};
int gmin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_G, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_C, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_F};
int g#min[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_B,
            MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP};
int amin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_A, MIDI_OCTAVE_5 + MIDI_NOTE_C,
            MIDI_OCTAVE_5 + MIDI_NOTE_D, MIDI_OCTAVE_5 + MIDI_NOTE_E,
            MIDI_OCTAVE_5 + MIDI_NOTE_G};
int a#min[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_A_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_C_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_D_SHARP, MIDI_OCTAVE_5 + MIDI_NOTE_F,
            MIDI_OCTAVE_5 + MIDI_NOTE_G_SHARP};
int bmin[] = { 0, MIDI_OCTAVE_5 + MIDI_NOTE_B, MIDI_OCTAVE_5 + MIDI_NOTE_D,
            MIDI_OCTAVE_5 + MIDI_NOTE_E, MIDI_OCTAVE_5 + MIDI_NOTE_F_SHARP,
            MIDI_OCTAVE_5 + MIDI_NOTE_A};