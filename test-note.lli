; ModuleID = 'Improv'
source_filename = "Improv"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@str = private unnamed_addr constant [2 x i8] c"0\00"
@str.2 = private unnamed_addr constant [2 x i8] c"1\00"
@str.3 = private unnamed_addr constant [2 x i8] c"2\00"
@str.4 = private unnamed_addr constant [2 x i8] c"3\00"
@str.5 = private unnamed_addr constant [2 x i8] c"4\00"

declare i32 @printf(i8*, ...)

declare i32 @printbig(i32)

declare i32 @printn({ i32, i8* })

declare i32 @printa({ i32, i32* })

declare i32 @render({ i32, { i32, i8* }* }, i8*, i32, i32)

declare i32 @printmidi(i8*)

define i32 @main() {
entry:
  %n = alloca { i32, i8* }
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32, i8* }* getelementptr ({ i32, i8* }, { i32, i8* }* null, i32 1) to i32))
  %struct_mem = bitcast i8* %malloccall to { i32, i8* }*
  %tone = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem, i32 0, i32 0
  %rhythm = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem, i32 0, i32 1
  store i32 0, i32* %tone
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i32 0, i32 0), i8** %rhythm
  %struct_literal = load { i32, i8* }, { i32, i8* }* %struct_mem
  store { i32, i8* } %struct_literal, { i32, i8* }* %n
  %n1 = load { i32, i8* }, { i32, i8* }* %n
  %printn = call i32 @printn({ i32, i8* } %n1)
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ i32, i8* }* getelementptr ({ i32, i8* }, { i32, i8* }* null, i32 1) to i32))
  %struct_mem3 = bitcast i8* %malloccall2 to { i32, i8* }*
  %tone4 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem3, i32 0, i32 0
  %rhythm5 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem3, i32 0, i32 1
  store i32 1, i32* %tone4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.2, i32 0, i32 0), i8** %rhythm5
  %struct_literal6 = load { i32, i8* }, { i32, i8* }* %struct_mem3
  store { i32, i8* } %struct_literal6, { i32, i8* }* %n
  %n7 = load { i32, i8* }, { i32, i8* }* %n
  %printn8 = call i32 @printn({ i32, i8* } %n7)
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ({ i32, i8* }* getelementptr ({ i32, i8* }, { i32, i8* }* null, i32 1) to i32))
  %struct_mem10 = bitcast i8* %malloccall9 to { i32, i8* }*
  %tone11 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem10, i32 0, i32 0
  %rhythm12 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem10, i32 0, i32 1
  store i32 2, i32* %tone11
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.3, i32 0, i32 0), i8** %rhythm12
  %struct_literal13 = load { i32, i8* }, { i32, i8* }* %struct_mem10
  store { i32, i8* } %struct_literal13, { i32, i8* }* %n
  %n14 = load { i32, i8* }, { i32, i8* }* %n
  %printn15 = call i32 @printn({ i32, i8* } %n14)
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ({ i32, i8* }* getelementptr ({ i32, i8* }, { i32, i8* }* null, i32 1) to i32))
  %struct_mem17 = bitcast i8* %malloccall16 to { i32, i8* }*
  %tone18 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem17, i32 0, i32 0
  %rhythm19 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem17, i32 0, i32 1
  store i32 3, i32* %tone18
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i32 0, i32 0), i8** %rhythm19
  %struct_literal20 = load { i32, i8* }, { i32, i8* }* %struct_mem17
  store { i32, i8* } %struct_literal20, { i32, i8* }* %n
  %n21 = load { i32, i8* }, { i32, i8* }* %n
  %printn22 = call i32 @printn({ i32, i8* } %n21)
  %malloccall23 = tail call i8* @malloc(i32 ptrtoint ({ i32, i8* }* getelementptr ({ i32, i8* }, { i32, i8* }* null, i32 1) to i32))
  %struct_mem24 = bitcast i8* %malloccall23 to { i32, i8* }*
  %tone25 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem24, i32 0, i32 0
  %rhythm26 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %struct_mem24, i32 0, i32 1
  store i32 4, i32* %tone25
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i32 0, i32 0), i8** %rhythm26
  %struct_literal27 = load { i32, i8* }, { i32, i8* }* %struct_mem24
  store { i32, i8* } %struct_literal27, { i32, i8* }* %n
  %n28 = load { i32, i8* }, { i32, i8* }* %n
  %printn29 = call i32 @printn({ i32, i8* } %n28)
  ret i32 0
}

declare noalias i8* @malloc(i32)
